# .github/workflows/deploy-from-gh-pages.yml
name: Deploy gh-pages to GitHub Pages Environment

on:
  push:
    branches:
      - gh-pages # Se déclenche UNIQUEMENT lors d'un push sur la branche gh-pages

permissions:
  contents: read   # Nécessaire pour lire la branche gh-pages
  pages: write     # Nécessaire pour déployer sur GitHub Pages
  id-token: write  # Nécessaire pour l'authentification avec GitHub Pages

# Autoriser un seul déploiement concurrent, en ignorant les exécutions mises en file d'attente
# entre celle en cours et la plus récente.
# Cependant, NE PAS annuler les exécutions en cours car nous voulons autoriser ces déploiements à se terminer.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # URL de la page déployée
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages # Important: assurez-vous de récupérer la branche gh-pages

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
        # Note: configure-pages est intelligent. Si le contenu est déjà à la racine
        # de la branche gh-pages (ce qui est le cas ici), aucune configuration spéciale n'est nécessaire.

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Le chemin vers les fichiers statiques DANS la branche gh-pages.
          # Comme la branche gh-pages contient le site à sa racine, le chemin est '.'.
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4